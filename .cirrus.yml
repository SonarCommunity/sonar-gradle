# content of service-account-credentials.json, used to access to Google Cloud Platform
gcp_credentials: ENCRYPTED[0006392fac64aa1d1fa874595c4ec576060fde31e860d8b1f4c2e015bc44522c46638ba15e73356d76867e06b320cdf7]

#
# ENV VARIABLES
#
env:
  ### Shared variables
  ARTIFACTORY_URL: VAULT[development/kv/data/repox data.url]
  ARTIFACTORY_PRIVATE_USERNAME: vault-${CIRRUS_REPO_OWNER}-${CIRRUS_REPO_NAME}-private-reader
  ARTIFACTORY_PRIVATE_PASSWORD: VAULT[development/artifactory/token/${CIRRUS_REPO_OWNER}-${CIRRUS_REPO_NAME}-private-reader access_token]
  ARTIFACTORY_DEPLOY_USERNAME: vault-${CIRRUS_REPO_OWNER}-${CIRRUS_REPO_NAME}-qa-deployer
  ARTIFACTORY_DEPLOY_PASSWORD: VAULT[development/artifactory/token/${CIRRUS_REPO_OWNER}-${CIRRUS_REPO_NAME}-qa-deployer access_token]
  ARTIFACTORY_ACCESS_TOKEN: VAULT[development/artifactory/token/${CIRRUS_REPO_OWNER}-${CIRRUS_REPO_NAME}-private-reader access_token]
  ARTIFACTORY_DEPLOY_REPO: sonarsource-public-qa

  GITHUB_TOKEN: VAULT[development/github/token/licenses-ro token]

  BURGR_URL: VAULT[development/kv/data/burgr data.url]
  BURGR_USERNAME: VAULT[development/kv/data/burgr data.cirrus_username]
  BURGR_PASSWORD: VAULT[development/kv/data/burgr data.cirrus_password]

  ### Project variables
  DEPLOY_PULL_REQUEST: true
  ARTIFACTS: org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:jar,org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:json:cyclonedx
  CIRRUS_SHELL: bash

#
# RE-USABLE CONFIGS
#
container_definition: &CONTAINER_DEFINITION
  dockerfile: integrationTests/docker/Dockerfile
  builder_image_project: sonarqube-team
  builder_image_name: docker-builder-v20200915
  cluster_name: cirrus-ci-cluster
  zone: us-central1-a
  namespace: default

container_definition_11: &CONTAINER_DEFINITION_11
  dockerfile: integrationTests/docker/Dockerfile_java11
  builder_image_project: sonarqube-team
  builder_image_name: docker-builder-v20200915
  cluster_name: cirrus-ci-cluster
  zone: us-central1-a
  namespace: default

container_definition_17: &CONTAINER_DEFINITION_17
  dockerfile: integrationTests/docker/Dockerfile_java17
  builder_image_project: sonarqube-team
  builder_image_name: docker-builder-v20200915
  cluster_name: cirrus-ci-cluster
  zone: us-central1-a
  namespace: default

only_sonarsource_qa: &ONLY_SONARSOURCE_QA
  only_if: $CIRRUS_USER_COLLABORATOR == 'true' && ($CIRRUS_PR != "" || $CIRRUS_BRANCH == "master" || $CIRRUS_BRANCH =~ "branch-.*" || $CIRRUS_BRANCH =~ "dogfood-on-.*")

build_task:
  gke_container:
    <<: *CONTAINER_DEFINITION_11
    cpu: 1.5
    memory: 4G
  env:
    SONAR_TOKEN: VAULT[development/kv/data/next data.token]
    SONAR_HOST_URL: VAULT[development/kv/data/next data.url]
    ORG_GRADLE_PROJECT_signingKey: VAULT[development/kv/data/sign data.key]
    ORG_GRADLE_PROJECT_signingPassword: VAULT[development/kv/data/sign data.passphrase]
    ORG_GRADLE_PROJECT_signingKeyId: VAULT[development/kv/data/sign data.key_id]
  gradle_cache:
    folder: ~/.gradle/caches
  script:
    - source cirrus-env BUILD
    - regular_gradle_build_deploy_analyze
  on_failure:
    reports_artifacts:
      path: "**/build/reports/**/*"
    junit_artifacts:
      path: "**/test-results/**/*.xml"
      format: junit

gradle_qa_java8_task:
  depends_on:
    - build
  <<: *ONLY_SONARSOURCE_QA
  gke_container:
    <<: *CONTAINER_DEFINITION
    cpu: 2
    memory: 2G
  env:
    matrix:
      - GRADLE_VERSION: 6.8.3
        ANDROID_GRADLE_VERSION: 4.2.0
      - GRADLE_VERSION: 5.6.4
        ANDROID_GRADLE_VERSION: 3.3.2
  gradle_cache:
    folder: ~/.gradle/caches
  script:
    - ./cirrus/cirrus-qa.sh
  cleanup_before_cache_script:
    - ./cirrus/cleanup-gradle-cache.sh

gradle_qa_java11_task:
  depends_on:
    - build
  <<: *ONLY_SONARSOURCE_QA
  gke_container:
    <<: *CONTAINER_DEFINITION_11
    cpu: 2
    memory: 2G
  env:
    matrix:
      - GRADLE_VERSION: 7.5.1
        ANDROID_GRADLE_VERSION: 7.1.0
      - GRADLE_VERSION: 6.8.3
        ANDROID_GRADLE_VERSION: 4.2.0
  gradle_cache:
    folder: ~/.gradle/caches
  script:
    - ./cirrus/cirrus-qa.sh
  cleanup_before_cache_script:
    - ./cirrus/cleanup-gradle-cache.sh

gradle_qa_java17_task:
  depends_on:
    - build
  <<: *ONLY_SONARSOURCE_QA
  gke_container:
    <<: *CONTAINER_DEFINITION_17
    cpu: 2
    memory: 2G
  env:
    matrix:
      - GRADLE_VERSION: 7.4.1
        ANDROID_GRADLE_VERSION: 7.1.0
  gradle_cache:
    folder: ~/.gradle/caches
  script:
    - ./cirrus/cirrus-qa.sh
  cleanup_before_cache_script:
    - ./cirrus/cleanup-gradle-cache.sh

promote_task:
  depends_on:
    - build
    - gradle_qa_java8
    - gradle_qa_java11
    - gradle_qa_java17
  <<: *ONLY_SONARSOURCE_QA
  gke_container:
    <<: *CONTAINER_DEFINITION
    cpu: 0.5
    memory: 500M
  env:
    ARTIFACTORY_ACCESS_TOKEN: VAULT[development/artifactory/token/${CIRRUS_REPO_OWNER}-${CIRRUS_REPO_NAME}-promoter access_token]
  script: |
    source cirrus-env PROMOTE
    jfrog rt bpr \
      --url "${ARTIFACTORY_URL}" \
      --access-token "${ARTIFACTORY_ACCESS_TOKEN}" \
      --status it-passed \
      "${CIRRUS_REPO_NAME}" "${BUILD_NUMBER}" sonarsource-public-builds
    burgr-notify-promotion

release_to_plugin_portal_task:
  only_if: $CIRRUS_PRERELEASE != "true" && $CIRRUS_RELEASE != ""
  stateful: 'true'
  depends_on:
    - promote
  gke_container:
    <<: *CONTAINER_DEFINITION_11
    cpu: 1.5
    memory: 4G
  gradle_cache:
    folder: ~/.gradle/caches
  env:
    ORG_GRADLE_PROJECT_signingKey: VAULT[development/kv/data/sign data.key]
    ORG_GRADLE_PROJECT_signingPassword: VAULT[development/kv/data/sign data.passphrase]
    ORG_GRADLE_PROJECT_signingKeyId: VAULT[development/kv/data/sign data.key_id]
    GRADLE_PUBLISH_KEY: VAULT[development/kv/data/gradle/publish data.key]
    GRADLE_PUBLISH_SECRET: VAULT[development/kv/data/gradle/publish data.secret]
    ARTIFACTORY_ACCESS_TOKEN: VAULT[development/artifactory/token/${CIRRUS_REPO_OWNER}-${CIRRUS_REPO_NAME}-promoter access_token]
  script: |
    source cirrus-env RELEASE
    ./gradlew \
      --info \
      --stacktrace \
      --console plain \
      "-Pgradle.publish.key=${GRADLE_PUBLISH_KEY}" \
      "-Pgradle.publish.secret=${GRADLE_PUBLISH_SECRET}" \
      "-DbuildNumber=${BUILD_NUMBER}" \
      publishPlugins
    jfrog rt bpr \
      --url "${ARTIFACTORY_URL}" \
      --access-token "${ARTIFACTORY_ACCESS_TOKEN}" \
      --status it-passed \
      "${CIRRUS_REPO_NAME}" "${BUILD_NUMBER}" sonarsource-public-releases
